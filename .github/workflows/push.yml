name: Test Actions
on:
  pull_request:
  push:
jobs:
  format:
    name: Formatting (with black)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.6
        uses: actions/setup-python@v4
        with:
          python-version: 3.6
      - name: Cache python environment
        id: cache-env
        uses: actions/cache@v3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-formatting-black-22.8.0
      - name: Install black
        if: steps.cache-env.outputs.cache-hit != 'true'
        run: |
          pip install black==22.8.0
      - name: Black Format Check
        run: |
          black --check didcomm_resolver

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
      - name: Install dependencies
        run: poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: integration tests
        run: |
          docker-compose -f int/docker-compose.yml run tests && docker-compose -f int/docker-compose.yml stop
